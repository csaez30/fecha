/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Contrato;

import Conexion.Conexion;
import Contrato.Controlador.CtrlContrato;
import Contrato.Modelo.ConsultaContrato;
import Contrato.Modelo.*;
import Inmueble.Modelo.ConsultasInmueble;
import Inmueble.Modelo.Inmueble;
import Inquilino.Modelo.ConsultasInquilno;
import Inquilino.Modelo.Inquilino;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class PanelContratoList extends javax.swing.JPanel {
    
    public static DefaultTableModel modeloContrato = new DefaultTableModel();
    private static ConsultaContrato consultaContrato=new ConsultaContrato();
     private static ArrayList<Contrato> contratos=new ArrayList<Contrato>();
    private ConsultasInmueble consultaInmueble=new ConsultasInmueble();    
    private ConsultasInquilno consultaInquilino=new ConsultasInquilno();
    private ArrayList<Inmueble> inmuebles=new ArrayList<Inmueble>();
    private ArrayList<Inquilino> inquilinos=new ArrayList<Inquilino>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
     public PanelContratoList() {
        initComponents();
        modeloContrato= new DefaultTableModel(){ 
            @Override
	 public boolean isCellEditable(int row, int column) {
         return false;
	}
	};
        this.jTableContrato.addMouseListener
                (
                        new MouseAdapter()
                        {
                            public void mouseClicked(MouseEvent evnt)
                            {
                                if(evnt.getClickCount()>1)
                                {
                                    Contrato contrato = new Contrato();
        ConsultaContrato cdContrato = new ConsultaContrato();
        ConsultasInquilno cdInquilino = new ConsultasInquilno();
        ConsultasInmueble cdInmueble = new ConsultasInmueble();
        FromContrato fromCont = new FromContrato();

        contrato = PanelContratoList.obtenerContratoDeTabla();
        if (contrato==null)
        { JOptionPane.showMessageDialog(null, "No se selecciono ningun inquilino de la tabla");}
        else {
            cdContrato.Buscar(contrato);
            fromCont.txtID_contrato.setText(Integer.toString(contrato.getId_contrato()));

            fromCont.jComboBoxEstadoContrato.setSelectedItem(contrato.getEstado_contrato());
            fromCont.txtMonto.setText(String.valueOf(contrato.getMonto()));
            fromCont.jDateChooserFecIni.setDate(Date.from(contrato.getFecha_ini().atStartOfDay(ZoneId.systemDefault()).toInstant()));
            fromCont.jDateChooserFecFin.setDate(Date.from(contrato.getFecha_fin().atStartOfDay(ZoneId.systemDefault()).toInstant()));

            CtrlContrato ctrlContrato = new CtrlContrato(contrato, cdContrato, fromCont);
            ArrayList<Inquilino> inquilinos=new ArrayList<Inquilino>();
            cdInquilino.obtenerInquilinos(inquilinos);
            cargarInquilino();
            for(Inquilino inq:inquilinos ){
                if(contrato.getInquilino().getDni_inquilino() == inq.getDni_inquilino()){

                    fromCont.jComboBoxInquilino.getModel().setSelectedItem(inq);
                    break;
                }
            }
            ArrayList<Inmueble> inmuebles=new ArrayList<Inmueble>();
            cdInmueble.obtenerInmuebles(inmuebles);
            cargarInmueble();
            for(Inmueble inm:inmuebles ){
                if(contrato.getInmueble().getId_inmueble() == inm.getId_inmueble()){

                    fromCont.jComboBoxInmueble.getModel().setSelectedItem(inm);
                    break;
                }
            }
            ctrlContrato.iniciar();
            //PanelContratoList.cargarContratos();false
            fromCont.jButtonBuscarInmueble.setEnabled(false);
            fromCont.jButtonBuscarInquilino.setEnabled(false);
            fromCont.jComboBoxInmueble.setEnabled(false);
            fromCont.jComboBoxInquilino.setEnabled(false);
            fromCont.jDateChooserFecFin.setEnabled(false);
            fromCont.jDateChooserFecIni.setEnabled(false);
            fromCont.txtMonto.setEditable(false);
            fromCont.jButtonGuardar.setEnabled(false);
            fromCont.txtID_contrato.setEditable(false);
            fromCont.jButtonLimpiar.setEnabled(false);
  
            // this.setEnabled(false);
        }
                                }
                            }
                        });
                
        armarCabeceraContrato();
        cargarContratos();
        
        //---CARGAR COMBOS BUSQUEDA
        cargarInmueble();
        cargarInquilino();
        
     }
     public void cargarInmueble(){
            consultaInmueble.obtenerInmuebles(inmuebles);
        this.jComboBoxFinderInmueble.addItem(null);
         for(Inmueble elem:inmuebles){
            this.jComboBoxFinderInmueble.addItem(elem);
         }
    }
    
    public void cargarInquilino(){
        consultaInquilino.obtenerInquilinos(inquilinos);
        this.jComboBoxFinderInquilino.addItem(null);
         for(Inquilino elem:inquilinos){
            this.jComboBoxFinderInquilino.addItem(elem);
         }
    }
     
     public void armarCabeceraContrato(){
         ArrayList<Object> columnasC=new ArrayList<Object>();
            columnasC.add("ID");
            columnasC.add("Inquilino");
            columnasC.add("Inmueble");
            columnasC.add("Propietario");
            columnasC.add("Estado");
            columnasC.add("Fecha Inicio");
            columnasC.add("Fecha Fin");
            
        for(Object col:columnasC) {
            modeloContrato.addColumn(col);
        }
        jTableContrato.setModel(modeloContrato);
        jTableContrato.getColumn("ID").setMaxWidth(30);
        jTableContrato.getColumn("Inquilino").setMinWidth(120);
        jTableContrato.getColumn("Inmueble").setMinWidth(270);
        jTableContrato.getColumn("Propietario").setMinWidth(120);
        jTableContrato.getColumn("Estado").setMinWidth(80);
        jTableContrato.getColumn("Fecha Inicio").setMinWidth(80);
        jTableContrato.getColumn("Fecha Fin").setMinWidth(80);
     }
     public static void borrarContratos(){
        int c = modeloContrato.getRowCount()-1;
        for(int i=c;i>=0;i--)
            modeloContrato.removeRow(i);
    }
     
     public static void cargarContratos(){
            contratos.clear();
            consultaContrato.obtenerContratos(contratos);
            borrarContratos();
            for(Contrato con:contratos){
                modeloContrato.addRow(new Object[] {
                    con.getId_contrato(), 
                    con.getInquilino().getApellido_inquilino()+", "+con.getInquilino().getNombre_inquilino(), 
                    con.getInmueble().getTipo_inmueble()+". "+con.getInmueble().getDireccion_inmueble(),
                    con.getInmueble().getPropietario().getApellido_propietario()+", "+con.getInmueble().getPropietario().getNombre_propietario(),
                    con.getEstado_contrato(),
                    con.getFecha_ini().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
                    con.getFecha_fin().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"))
                });
            }
     }
     
     public static Contrato  obtenerContratoDeTabla(){
        Contrato contrato=new Contrato();
          
        int fila;
        fila = jTableContrato.getSelectedRow();
        if (fila > -1){
            contrato.setId_contrato((int)jTableContrato.getValueAt(fila, 0));
            consultaContrato.Buscar(contrato);
            return contrato;
        } else{ 
            return null;      
        }
      }
      public static void cargarContratosBus(ArrayList<Contrato> contratos){
        borrarContratos();
       for(Contrato con:contratos){
                modeloContrato.addRow(new Object[] {
                    con.getId_contrato(), 
                    con.getInquilino().getApellido_inquilino()+", "+con.getInquilino().getNombre_inquilino(), 
                    con.getInmueble().getTipo_inmueble()+". "+con.getInmueble().getDireccion_inmueble(),
                    con.getInmueble().getPropietario().getApellido_propietario()+", "+con.getInmueble().getPropietario().getNombre_propietario(),
                    con.getEstado_contrato(),
                    con.getFecha_ini().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
                    con.getFecha_fin().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"))
                });


            }
     }
      


    public void limpiar(){
         this.jComboBoxFinderInmueble.setSelectedIndex(0);
         this.jComboBoxFinderInquilino.setSelectedIndex(0);
         this.jComboBoxFinderEstadoContrato.setSelectedIndex(0);
         this.jDateChooserFecFinDesde.setDate(null);
         this.jDateChooserFecFinHasta.setDate(null);
         this.jDateChooserFecIniDesde.setDate(null);
         this.jDateChooserFecIniHasta.setDate(null);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableContrato = new javax.swing.JTable();
        jPanelBusqueda = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxFinderInmueble = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxFinderInquilino = new javax.swing.JComboBox<>();
        jComboBoxFinderEstadoContrato = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateChooserFecIniDesde = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jDateChooserFecIniHasta = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jDateChooserFecFinDesde = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jDateChooserFecFinHasta = new com.toedter.calendar.JDateChooser();
        jButtonBuscarLimpiar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTableContrato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableContrato);

        jPanelBusqueda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Busqueda Contrato:");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Inmueble:");

        jComboBoxFinderInmueble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFinderInmuebleActionPerformed(evt);
            }
        });

        jLabel3.setText("Inquilino:");

        jComboBoxFinderEstadoContrato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "VIGENTE", "NO VIGENTE" }));

        jLabel4.setText("Estado contrato:");

        jLabel8.setText("Fecha Inicio desde:");

        jLabel9.setText("Hasta:");

        jLabel10.setText("Fecha Fin desde:");

        jLabel11.setText("Hasta:");

        jButtonBuscarLimpiar.setText("Limpiar");
        jButtonBuscarLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBusquedaLayout = new javax.swing.GroupLayout(jPanelBusqueda);
        jPanelBusqueda.setLayout(jPanelBusquedaLayout);
        jPanelBusquedaLayout.setHorizontalGroup(
            jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                        .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxFinderInmueble, 0, 271, Short.MAX_VALUE)
                            .addComponent(jComboBoxFinderInquilino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30))
                    .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                        .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(31, 31, 31)
                                .addComponent(jComboBoxFinderEstadoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(29, 29, 29)
                                        .addComponent(jDateChooserFecFinDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDateChooserFecIniDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooserFecFinHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelBusquedaLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooserFecIniHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBusquedaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonBuscarLimpiar)
                .addGap(13, 13, 13))
        );
        jPanelBusquedaLayout.setVerticalGroup(
            jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusquedaLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxFinderInmueble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxFinderInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxFinderEstadoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jDateChooserFecIniDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jDateChooserFecIniHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jDateChooserFecFinDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jDateChooserFecFinHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscar)
                    .addComponent(jButtonBuscarLimpiar))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Lista de Contratos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(179, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
// TODO add your handling code here:
        List <Contrato> contratoBus = new ArrayList<Contrato>() ;
        ConsultaContrato cdContrato = new ConsultaContrato();
        
         StringBuffer buffer = new StringBuffer( "SELECT * FROM contrato WHERE 1=1 " );
         
                    
        if(jComboBoxFinderInmueble.getSelectedItem() != null && ((Inmueble) jComboBoxFinderInmueble.getSelectedItem()).getId_inmueble() != -1 ){
            buffer.append(" AND id_inmueble = " + ((Inmueble) jComboBoxFinderInmueble.getSelectedItem()).getId_inmueble());
        } 
        if(jComboBoxFinderInquilino.getSelectedItem() != null && ((Inquilino) jComboBoxFinderInquilino.getSelectedItem()).getDni_inquilino() != -1 ){
            buffer.append(" AND dni_inquilino = " + ((Inquilino) jComboBoxFinderInquilino.getSelectedItem()).getDni_inquilino() );
        }
        if (jComboBoxFinderEstadoContrato.getSelectedItem().toString().equals("VIGENTE")){
            buffer.append(" AND estado_contrato = 'VIGENTE'");
        }
        
        if (jComboBoxFinderEstadoContrato.getSelectedItem().toString().equals("NO VIGENTE")){
            buffer.append(" AND estado_contrato = 'NO VIGENTE'");
        }
       // CONVERT('2019-10-31', DATETIME)
        if(jDateChooserFecIniDesde.getDate() != null){
            if(jDateChooserFecIniHasta.getDate() != null){
                    buffer.append(" AND fecha_ini >= CONVERT('" + jDateChooserFecIniDesde.getDate().toInstant().atZone(ZoneId.systemDefault()).toString() + "', DATETIME)"); 
                    buffer.append(" AND fecha_ini <= CONVERT('" + jDateChooserFecIniHasta.getDate().toInstant().atZone(ZoneId.systemDefault()).toString() + "', DATETIME)");
            }else{
                    buffer.append(" AND fecha_ini >= CONVERT('" + jDateChooserFecIniDesde.getDate().toInstant().atZone(ZoneId.systemDefault()).toString() + "', DATETIME)");
            }
            
        }
        if(jDateChooserFecFinDesde.getDate() != null){
            if(jDateChooserFecFinHasta.getDate() != null){
                    buffer.append(" AND fecha_fin >= CONVERT('" + jDateChooserFecFinDesde.getDate().toInstant().atZone(ZoneId.systemDefault()).toString() + "', DATETIME)"); 
                    buffer.append(" AND fecha_fin <= CONVERT('" + jDateChooserFecFinHasta.getDate().toInstant().atZone(ZoneId.systemDefault()).toString() + "', DATETIME)");
            }else{
                    buffer.append(" AND fecha_fin >= CONVERT('" + jDateChooserFecFinDesde.getDate().toInstant().atZone(ZoneId.systemDefault()).toString() + "', DATETIME)");
            }
            
        }
         contratoBus = cdContrato.busquedaEspecifica(buffer);
        
           if (contratoBus.isEmpty()){
               JOptionPane.showMessageDialog(null, "No se encontraron resultados");
               this.jComboBoxFinderInmueble.setSelectedIndex(-1);
               this.jComboBoxFinderInquilino.setSelectedIndex(-1);
               this.jComboBoxFinderEstadoContrato.setSelectedIndex(0);
               cargarContratos();
               
            }else{
                cargarContratosBus((ArrayList)contratoBus);
           }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jComboBoxFinderInmuebleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFinderInmuebleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFinderInmuebleActionPerformed

    private void jButtonBuscarLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_jButtonBuscarLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonBuscar;
    public javax.swing.JButton jButtonBuscarLimpiar;
    public javax.swing.JComboBox jComboBoxFinderEstadoContrato;
    public javax.swing.JComboBox jComboBoxFinderInmueble;
    public javax.swing.JComboBox<Inquilino> jComboBoxFinderInquilino;
    public com.toedter.calendar.JDateChooser jDateChooserFecFinDesde;
    public com.toedter.calendar.JDateChooser jDateChooserFecFinHasta;
    public com.toedter.calendar.JDateChooser jDateChooserFecIniDesde;
    public com.toedter.calendar.JDateChooser jDateChooserFecIniHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanelBusqueda;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableContrato;
    // End of variables declaration//GEN-END:variables
}
